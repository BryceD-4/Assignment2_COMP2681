/*
Bryce Dixon (T00054766) Sept 2024
COMP 2681, Assignment 3 HTML file

This is a stylesheet used within the contact form of my website (form.html). 
This allows the form to adjust its formatting when it is viewed on devices larger or smaller than 768px. 
this value was chosen as this is the value of a landscape tablet. 
This code is built to fit, firstly, a mobile device effectively, and then it builds on that for when a larger device is used.
The form adjusts dynamically as the form is adjusted or used on various devices. a large reliance on flex-box design and relative units is used for this. 
I kept the styles less general so that they would target all the items I needed to (either wihtin a class or with an id) and not more than that. this way, when other style sheets are added or if other
forms use this style sheet, it will be scalable. 
I kept the colour scheme similar to my first website. 
If the screen is zoomed in or out, the formatting remains adjusted to this. 

REFERENCES:
1. https://www.smashingmagazine.com/2018/08/best-practices-for-mobile-form-design/
  - Tried to pull in mobile design best practices for my form (everything labelled, not overwhelming, labels and inputs on separate lines etc)
2. https://www.audioeye.com/post/8-ways-to-design-a-color-blind-friendly-website/
- I tried to keep in mind gray-scale and other means of aiding colour blind and/ or visually impaired individuals
*/

/*
COLOR SCHEME:
Dark-green: #031f1c, the same as rgb(3,31,28) <main background>
Dark grey: #1c1c1c <nav bar>
Gold/Yellow: #e5cf87 <text>
lighter blue: #306889 <hr and border>
Darker blue: #0b405b <hover items>
*/

body{
  /*Matches the colour of the main page*/
  background-color: #031f1c;
}

div#Webpage_contact_info, div>p>a.Contact_links{
  /*This is my contact info, text adjusts to the screen using vh*/
  color:aliceblue;
  font-size: 2vh;
}
/*These are the links for my contact information, making them more interactive*/
a.Contact_links:hover{
  color:aqua;
}
/*The link to return  home remains in the same location regardless of the device*/
div#return_home_link{
  text-align: left;
  text-decoration:underline overline;
}
#contact_form_heading{
  background-color: rgb(3, 20, 71);
  color:antiquewhite;
  border-bottom:2px solid #e5cf87;
  height:10%;
  padding:5%;
  text-align: center;
}
/*The main form*/
/*I wanted it to be set to 100% so that on a mobile, it will be the entire screen and have only vertical scrolling*/
form#cOrder{
  background-color: white;
  border: 2px solid #e5cf87;
  border-radius:6px;
  width:100%;
}
.required_asterisk{
  color:red;
  font-weight: bold;
}
/*By default the fieldsets had borders, so I wanted to remove those and use field sets to organize my code*/
fieldset{
  border: none;
  font-size: 3vh;
}
/*I used legends as headers in my form to organize the information*/
legend{
  width:100%;
  text-align: center;
  border-bottom: 2px solid black;
}
/*Again, I wanted these to be the width of their container, as on a phone, we need room for the text and the user's finger*/
.form_row input, .form_row select{
  width:100%;
  height: 4vh;
}
/*same reasoning as above, we want to have the label above the input or select item so each is on its own line*/
.form_row label{
  width:100%;
}
/*The text box was acting rigid and not adapting to the screen so I wanted it to be a preset height and width that is relative*/
.form_row textarea#additional_comments_box{
  height:16vh;
  width: 100%;
}
/*This is one area where having the label and input on separate lines did not make sense, so I made this a flex layout to get the items side by side*/
/*The items were not aligning vertically, so I used "align-items" to get them to align centrally*/
fieldset#contact_me_checkbox{
  display:flex; /*Allow the input and label to sit side by side*/
  align-items: center; /*label and input were not lining up, so added this to make them adjust correctly*/
  input{
    width:auto;
  }
  label{
    width:auto;
  }
}

/*I wanted the buttons to be inline and separated so I simply made them as a  flexbox layout, centered and then added a gap between them*/
fieldset#buttons{
  display:flex;
  justify-content: center; /*Needs to be flex to indicate this*/
  gap: 18%;
}
/*I wanted the button to stand out and be easily viewable in grey scale as well, which is why I chose these colours and sizes*/
#submit_button{
  background-color: rgb(127, 242, 92);
  height: 6vh;
}
  
#reset_button{
  background-color:rgb(191, 8, 8);
  height: 6vh;
}

/*INLINE VALIDATIONS*/
/*Make it so that if an item is enterred incorrectly and it has the focus, then the boxes will be coming up as red, otherwise it has no color, unless it is focussed on.*/
input#province:focus:valid, input#poscode:focus:valid, input#phone:focus:valid{
  /*This is the same colour as these boxes turn when we hover, so no need to add a hover for valid boxes*/
  border-color:rgb(127, 233, 201);
}
/*When in focus and invalid this way it is not always looking red, it is only when it is in focus or hovered*/
input#province:focus:invalid, input#poscode:focus:invalid, input#phone:focus:invalid{
  background-color: rgb(233, 162, 162);
}
/*When hover and invalid, so that it is not always red, only when in focus or hovering*/
input#province:hover:invalid, input#poscode:hover:invalid, input#phone:hover:invalid{
  background-color: rgb(233, 162, 162);
}




/*For Landscape TABLETS to DESKTOP computers*/
/*We make all labels go beside text boxes, and there appears a left and right column on the screen*/
/*768 was chosen as this is the size for most landscape tablets and above. This way the form formats to the screen and will make better use of larger spaces if presented*/
@media only screen and (min-width:768px){
  /*We go to a predominantly flex layout with larger screens*/
  /*The font size was being inconsistent, so I simply made it inherit this from previous*/
  body{
  background-color: #031f1c;
  display:flex;
  font-size:inherit;
  }
  
  /*The contact form (flex:2) will result in being 2x wider than the contact info*/
  /*The contact info will be presented first (order:1)*/
  div#Webpage_contact_info{
    color:aliceblue;
    text-align: center; /*Center the text*/
    align-content: center; /*Center all items in this div*/
    flex:1;
    order:1;
  }
  /*I was having an issue with the form spanning part of the page, and if the screen was zoomed in, the items would go outside of their container*/
  /*To fix this, I made the height of the form 100vh, and then added overflow:auto to make the page scrollable if needed*/
  form#cOrder{
    background-color: white;
    border-radius:6px;
    height:100vh; /*now spans the entire page*/
    overflow:auto; /*If you zoom the page in or out, the text doesn't leave the form, it just becomes scrollable*/
    flex:2;
    order:2; /*Occur after the contact info*/
  }
  /*The font size was not being consistent, so I wanted it to simply inherit it from its parent element (body)*/
  fieldset{
    font-size: inherit;
  }
 /*Since flex only works on the item and its direct child, I had to add the fieldsets (class of form_row) to be flex as well*/
 /*This way labels and inputs are aligned effectively (inline)*/
  .form_row{
    display: flex;
  }
  /*This was added so that labels and inputs are inline instead of in mobile format viewing*/
  .form_row label{
    width:inherit; /*Without inherit, the width would still be 100%, which alterred formatting in flex display*/
  }
  /*Doing this allows the label to sit beside the input, while the input will span the remainder of the page*/
  .form_row input{
    height: auto;
    flex: 1;
  }
  
  /*Now for inputs where I wanted a more suitable text box size, I adjusted them here by changing their flex values*/
  /*Added to allow input items to be a more accurate relative size. Not added to the mobile version as we want a bit more space for easy clickability*/
  .form_row select, #phone{
    height:auto;
    flex:0.3;
  }
  #poscode{
    flex:0.15; /*This size allows for text to fit in all screen sizes and even when screen is zoomed in a lot on desktop*/
  }
  #province{
    flex:0.1;
  }
  #city{
    flex:0.6;
  }

  /*This allows for an interactive component where the items on the screen adjust to being hovered*/
  /*This was not part of the mobile design as we don't have the ability to hover with a phone*/
  .form_row input:hover, select:hover, textarea:hover{
    background-color: rgb(127, 233, 201);
  }

/*Again, this differs from the above layouts as we don't want the checkbox to be set to "flex:1". so to format this effectively, add an inline flex and adjust width*/
  /*This keeps the checkbox and label inline and nicely formatted*/
  /*So I set this in the fieldset and the label/ input widths simply inherit so that they format evenly*/
  
  fieldset#contact_me_checkbox{
    width:100%; /*Without this, this fieldset only spans 25% due to its alterred layout display*/
  }
  fieldset#contact_me_checkbox input{
    width: 3vh;
    height: 3vh;
    z-index:10;
  }
  fieldset#contact_me_checkbox label{
    /*I could not get the label and input to stop overlapping in Safari browser (all other browsers were good) so I added this margin*/
    margin-left: 10px;
    width:inherit;
  }

  /*The checkbox has different abilities when discussing hover effects, so I chose to make it enlarge when it hovers*/
  input[type="checkbox"]:hover{
    transition: transform 0.3s ease;
    transform: scale(1.2); /* enlarge checkbox on hover */
  }
  /*I also wanted to the label of the text box to underline with the hover, so I added this as otherwise the textbox interactions are quite subtle*/
  input[type="checkbox"]:hover+label{
    text-decoration: underline;
    text-decoration-color:rgb(22, 122, 92);
  }

  /*the addition comments box formatted inconveniently with how it was for mobile, so it is adjusted for larger screens*/
  .form_row textarea#additional_comments_box{
  height:auto;
  width: 90%;
  }
  
  /*The buttons are a bit darker, but then this allows for a nice contrast with the hover effects*/
  #submit_button{
    background-color: rgb(29, 168, 29);
    height: 4vh;
  }
  #reset_button{
    background-color: rgb(188, 4, 4);
    height: 4vh;
  }

  #submit_button:hover{
    background-color:greenyellow;
    border:1px solid black;
  }
  #reset_button:hover{
    background-color: orangered;
    border: 1px solid black;
  }
}
